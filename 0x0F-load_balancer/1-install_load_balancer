#!/usr/bin/env bash
# Create a script to install and configure HAProxy on lb-01 server
# Configure HAProxy to send traffic to web-01 and web-02 servers
# Distribute requests using a roundrobin algorithm
# Make sure that HAProxy can be managed via an init script
# Install and configure HAproxy on my lb-01 server.

# colors
blue='\e[1;34m'
brown='\e[0;33m'
green='\e[1;32m'
reset='\033[0m'

echo -e "${blue}Updating and doing some minor checks...${reset}\n"

function install() {
    command -v "$1" &> /dev/null

    #shellcheck disable=SC2181
    if [ $? -ne 0 ]; then
	echo -e "Installing: ${brown}$1${reset}\n"
	sudo apt-get update -y -qq && \
	    sudo apt-get install -y "$1" -qq
	echo -e "\n"
    else
	echo -e "${green}${1} is already installed.${reset}\n"
    fi
}

install haproxy #install haproxy

echo -e "\n${blue}Setting up some minor stuff.${reset}\n"

# backup default server config file
sudo cp /etc/haproxy/haproxy.cfg haproxy_default.backup

server_config=\
	     "
defaults
  mode http
  timeout client 15s
  timeout connect 10s
  timeout server 15s
  timeout http-request 10s

frontend asamany-frontend
    bind *:80
    default_backend asamany-backend

backend asamany-backend
    balance roundrobin
    server 105153-web-01 54.90.47.25:80 check
    server 105153-web-02 54.237.101.240:80 check
"

# shellcheck disable=SC2154
echo "$server_config" | sudo dd status=none of=/etc/haproxy/haproxy.cfg

# enable haproxy to be started by init script
echo "ENABLED=1" | sudo dd status=none of=/etc/default/haproxy

if [ "$(pgrep -c haproxy)" -le 0 ]; then
    sudo service haproxy start
else
    sudo service haproxy restart
    fi
